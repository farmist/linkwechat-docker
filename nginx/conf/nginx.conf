worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    client_max_body_size 20M;
    client_body_buffer_size 20M;

    	#gzip  on;
    	#优先静态压缩，使用现成的扩展名为 .gz 的预压缩文件
     gzip_static on;
     gzip_proxied expired no-cache no-store private auth;
     
     #是否启动gzip动态压缩,on代表启动,off代表开启
	gzip  on;
	#需要压缩的常见静态资源
	gzip_types text/plain application/javascript   application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
	  
	#由于nginx的压缩发生在浏览器端而微软的ie6很坑爹,会导致压缩后图片看不见所以该选项是禁止ie6发生压缩
	gzip_disable "MSIE [1-6]\.";
	  
	#如果文件大于1k就启动压缩
	gzip_min_length 10k;
	  
	#以16k为单位,按照原始数据的大小以4倍的方式申请内存空间,一般此项不要修改
	gzip_buffers 4 16k;
	  
	#压缩的等级,数字选择范围是1-9,数字越小压缩的速度越快,消耗cpu就越大
	gzip_comp_level 2;
    
    
    server {
        listen       80;
        server_name  localhost;


         location / {
            root   /usr/share/nginx/html/pc;
            index  index.html index.htm;
            try_files $uri $uri/ @router;
	       proxy_read_timeout 150;
        }
       
         location /mobile{
           alias /usr/share/nginx/html/mobile;
           try_files $uri $uri/ @router;
           index  index.html;
        }  
		
		location /api/{
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header REMOTE-HOST $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://lw-gateway:8080/;
		}

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}# requirepass 123456